#!/opt/chef/embedded/bin/ruby

# Given a chef repo name, a cookbook name, a version to bump environments to,
# and a comma-separated list of environments passed as environment variables,
# bumps the cookbook to the given version in each of the environments (or all
# of them if no environments are specified) and creates a PR for it on Github.

require 'git'
require 'json'
require 'octokit'
require 'pp' # TODO: Remove pp after done debugging

# TODO: Validate input

org_name = '<%= @org_name %>'
chef_repo = '<%= @chef_repo %>'
cookbook = ENV['cookbook']
version = ENV['version']

# Only bump in the chef environments specified
chef_envs = ENV['envs'].split(',')
# If no envs are specified, bump all of them
if chef_envs.include?('*')
  all_envs = true
  chef_env_files = Dir::glob('environments/*.json')
  chef_envs = chef_env_files.map { |f| f.slice(%r{environments/(.*)\.json}, 1) }
else
  chef_env_files = chef_envs.map { |e| "environments/#{e}.json" }
end

# Create a new branch
Git.configure do |config|
  config.binary_path = '<%= @git_path %>'
end
git = Git.open('.')
git.branch('master').checkout
git_branch = "jenkins/bump-#{cookbook}-to-#{version}-in-#{chef_envs.join(',')}"
git.branch(git_branch).checkout

# Replace the old versions with the new versions
chef_env_files.each do |f|
  data = JSON.parse(File.read(f))
  if data['cookbook_versions'].include?(cookbook)
    data['cookbook_versions'][cookbook] = "= #{version}"
  end
  File.write(f, JSON.pretty_generate(data) + "\n")
end

# Commit and push our changes
git.add(all: true)
begin
  git.commit("Automatic version bump to v#{version} by Jenkins")
rescue Git::GitExecuteError
end
git.push(git.remote('origin'), git_branch, {tags: true, force: true})

# Create the PR
github = Octokit::Client.new(access_token: '<%= @github_token %>')
title = "Bump '#{cookbook}' cookbook to version #{version}"
body = "This automatically generated PR bumps the '#{cookbook}' cookbook " \
  "to version #{version} in "
if all_envs
  body += 'all environments.'
else
  body += "the following environments:\n```\n#{chef_envs.join("\n")}\n```"
end
github.create_pull_request(chef_repo, 'master', git_branch, title, body)
