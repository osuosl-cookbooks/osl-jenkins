#!/opt/chef/embedded/bin/ruby

# Given a chef repo name, a cookbook name, a version to bump environments to,
# and a comma-separated list of environments passed as environment variables,
# bumps the cookbook to the given version in each of the environments (or all
# of them if no environments are specified) and creates a PR for it on Github.

require 'git'
require 'json'
require 'octokit'

# TODO: Validate input

DEFAULT_CHEF_ENVS = <%= @default_environments %>.freeze
DEFAULT_CHEF_ENVS_WORD = '<%= @default_environments_word %>'.freeze
ALL_CHEF_ENVS_WORD = '<%= @all_environments_word %>'.freeze
CHEF_REPO = '<%= @chef_repo %>'.freeze

cookbook = ENV['cookbook']
version = ENV['version']

# Only bump in the chef environments specified
chef_envs = ENV['envs'].split(',')

# If 'default environments' word is found, replace it with the default envs.
if chef_envs.include?(DEFAULT_CHEF_ENVS_WORD)
  chef_envs.delete(DEFAULT_CHEF_ENVS_WORD)
  chef_envs += DEFAULT_CHEF_ENVS
end

# If 'all environments' word is found, bump all environments.
if chef_envs.include?(ALL_CHEF_ENVS_WORD)
  all_envs = true
  chef_env_files = Dir.glob('environments/*.json')
  chef_envs = chef_env_files.map { |f| f.slice(%r{environments/(.*)\.json}, 1) }
else
  chef_env_files = chef_envs.map { |e| "environments/#{e}.json" }
end

# Create a new branch
Git.configure do |config|
  config.binary_path = '<%= @git_path %>'
end
git = Git.open('.')
git.branch('master').checkout
chef_envs_string = all_envs ? 'all-envs' : chef_envs.join(',')
git_branch = "jenkins/bump-#{cookbook}-to-#{version}-in-#{chef_envs_string}"
git.branch(git_branch).checkout

# Replace the old versions with the new versions
chef_env_files.each do |f|
  data = JSON.parse(::File.read(f))
  if data['cookbook_versions'].include?(cookbook)
    data['cookbook_versions'][cookbook] = "= #{version}"
  end
  ::File.write(f, JSON.pretty_generate(data) + "\n")
end

# Commit and push our changes
git.add(all: true)
begin
  git.commit("Automatic version bump to v#{version} by Jenkins")
rescue Git::GitExecuteError
  $stderr.puts 'Unable to commit; were any changes actually made?'
end
git.push(git.remote('origin'), git_branch, tags: true, force: true)

# Create the PR
github = Octokit::Client.new(access_token: '<%= @github_token %>')
title = "Bump '#{cookbook}' cookbook to version #{version}"
body = "This automatically generated PR bumps the '#{cookbook}' cookbook " \
  "to version #{version} in "
if all_envs
  body += 'all environments.'
else
  body += "the following environments:\n```\n#{chef_envs.join("\n")}\n```"
end
github.create_pull_request(CHEF_REPO, 'master', git_branch, title, body)
